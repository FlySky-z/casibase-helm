# Default values for casibase-helm-chart.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
replicaCount: 1

# This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
image:
  repository: casbin
  name: casibase
  # This sets the pull policy for images.
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

# Use secret to mount app.conf file for who don't want user,pass on git  
# encode base64 on Value.config or create your own secret with anything you prefer
# if you use your own secret, leave Value.config: ""
# appConfigFromSecret: casibase

appConfig: |
  appname = casibase
  httpport = 14000
  runmode = dev
  SessionOn = true
  copyrequestbody = true
  driverName = mysql
  dataSourceName = root:123456@tcp(localhost:3306)/
  dbName = casibase
  redisEndpoint =
  guacamoleEndpoint = 127.0.0.1:4822
  isDemoMode = false
  disablePreviewMode = false
  logPostOnly = true
  landingFolder =
  casdoorEndpoint = https://door.casdoor.com
  ; casdoorEndpoint = http://localhost:8000
  clientId = af6b5aa958822fb9dc33
  clientSecret = 8bc3010c1c951c8d876b1f311a901ff8deeb93bc
  casdoorOrganization = "casbin"
  casdoorApplication = "app-casibase"
  redirectPath = /callback
  cacheDir = "C:/casibase_cache"
  appDir = ""
  isLocalIpDb = false
  audioStorageProvider = ""
  providerDbName = ""
  socks5Proxy = "127.0.0.1:10808"
  publicDomain = ""
  adminDomain = ""
  enableExtraPages = false
  shortcutPageItems = []
  usageEndpoints = []
  iframeUrl = ""
  forceLanguage = ""
  defaultLanguage = "en"
  staticBaseUrl = "https://cdn.casibase.org"
  htmlTitle = "Casibase"
  faviconUrl = "https://cdn.casibase.com/static/favicon.png"
  logoUrl = "https://cdn.casibase.org/img/casibase-logo_1200x256.png"
  navbarHtml = ""
  footerHtml = "Powered by <a target="_blank" href="https://github.com/casibase/casibase" rel="noreferrer"><img style="padding-bottom: 3px;" height="20" alt="Casibase" src="https://cdn.casibase.org/img/casibase-logo_1200x256.png" /></a>"
  appUrl = ""
  # frontendBaseDir = ""
  showGithubCorner = false
  defaultThemeType = "default"
  defaultColorPrimary = "#5734d3"
  defaultBorderRadius = 6
  defaultIsCompact = false
  avatarErrorUrl = "https://cdn.casibase.org/gravatar/error.png"


# This is for the secrets for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
imagePullSecrets: []
# This is to override the chart name.
nameOverride: "casibase"
fullnameOverride: ""

# This is to set the app environment variables.
env: []

# This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# This is for setting Kubernetes Annotations to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
podAnnotations: {}
# This is for setting Kubernetes Labels to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

# This is for setting up a service more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/
service:
  # This sets the service type more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
  type: ClusterIP
  # This sets the ports more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#field-spec-ports
  port: 14000

# This block is for setting up the ingress for more information can be found here: https://kubernetes.io/docs/concepts/services-networking/ingress/
ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# This is to setup the liveness and readiness probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
livenessProbe:
  httpGet:
    path: /health
    port: http
readinessProbe:
  httpGet:
    path: /health
    port: http

# This section is for setting up autoscaling more information can be found here: https://kubernetes.io/docs/concepts/workloads/autoscaling/
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# -- Enable/disable the default config volume mount to /conf
# Set to false if you want to provide your own config volume via extraVolumes/extraVolumeMounts
defaultConfigVolumeEnabled: true

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}
